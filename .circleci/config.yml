version: 2
references:
  save_workspace_artifacts: &save_workspace_artifacts
    store_artifacts:
      path: outputs/outputs/apk
  attach_workspace_artifacts: &attach_workspace_artifacts
    attach_workspace:
      at: outputs
  save_artifacts: &save_artifacts
    store_artifacts:
      path: app/build/outputs
      destination: apk
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run Tests
#          command: ./gradlew lint test
      - run:
          name: Build Code
          command: ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: apk
      - persist_to_workspace:
          root: app/build
          paths:
            - outputs

#      - store_test_results:
#          path: app/build/test-results
      - run:
          command: mv ./app/build/outputs/apk/debug/app-debug.apk ./app/build/outputs/apk/debug/efica.apk;
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      
  deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - *attach_workspace_artifacts
      # storing to be visible on api as an outcome of the last build
      - *save_workspace_artifacts
      - run:
          name: Deploy to hockey app
          command: sh ./deploy.sh
#Block 2
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master